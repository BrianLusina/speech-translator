apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: 'com.github.triplet.play'

/**
 * Gets the release track to use for deployment
 * Release tracks are either "alpha", "beta", "production", "rollout"
 * */
def getReleaseTrack = { ->
    try{
        Properties properties = new Properties()
        properties.load(new FileInputStream("gradle.properties"))
        return Integer.parseInt(properties.getProperty("RELEASE_TRACK"))
    }catch (ignored){
        return "beta"
    }
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    playAccountConfigs {
        defaultAccountConfig {
            serviceAccountEmail = globalConfiguration["serviceAccountEmail"]
            jsonFile = globalConfiguration["jsonKeyFile"]
        }
    }

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    defaultConfig {
        applicationId "com.speechtranslator"
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias rootProject.ext.keystoreProperties['keyAlias']
            keyPassword rootProject.ext.keystoreProperties['keyPassword']
            storeFile rootProject.file(rootProject.ext.keystoreProperties['storeFile'])
            storePassword rootProject.ext.keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            resValue "string", "app_name", "SpeechTranslator"
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            applicationIdSuffix ".debug"
            testCoverageEnabled true
            resValue "string", "app_name", "SpeechTranslator-Dev"
        }
    }

    buildTypes.each {
        it.buildConfigField "String", "APP_CENTER_KEY", APP_CENTER_KEY
    }

    sourceSets {
        main {
            java.srcDirs += "src/main/kotlin"
        }

        test {
            java.srcDirs += "src/test/kotlin"
        }

        androidTest {
            java.srcDirs += "src/androidTest/kotlin"
        }
    }
}

// configurations for deployment
play {
    jsonFile = rootProject.ext.jsonKeyFile
    track = getReleaseTrack()
    untrackOld = true
    errorOnSizeLimit = false
    uploadImages = true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_version"

    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Dependency Management
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-architecture:$koin_version"

    // AWS SDK
    implementation "com.amazonaws:aws-android-sdk-core:$aws_version"
    implementation "com.amazonaws:aws-android-sdk-auth-core:$aws_version"
    implementation "com.amazonaws:aws-android-sdk-translate:$aws_version"

    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

    testImplementation "junit:junit:$jUnit_version"
    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
}
